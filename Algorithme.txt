Algorithme



1)
FONCTIONS_UTILISEES
VARIABLES
x EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	x PREND_LA_VALEUR 0
	POUR x ALLANT_DE 0 A 25
			DEBUT_POUR
			AFFICHER x
			FIN_POUR
			
FIN_ALGORITHME

1-bis)
FONCTIONS_UTILISEES
VARIABLES
x EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	x PREND_LA_VALEUR 0
	TANT_QUE (x>25) FAIRE
		DEBUT_TANT_QUE
		AFFICHER x
		FIN_TANT_QUE
	POUR x ALLANT_DE 0 A 25
			DEBUT_POUR
			AFFICHER x
			FIN_POUR
			
FIN_ALGORITHME


2)
FONCTIONS_UTILISEES
VARIABLES
x EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	x PREND_LA_VALEUR 26
	TANT_QUE (x>1) FAIRE
		DEBUT_TANT_QUE
		x PREND_LA_VALEUR x-1
		AFFICHER x
		FIN_TANT_QUE
FIN_ALGORITHME

3)
FONCTIONS_UTILISEES
VARIABLES
a EST_DU_TYPE NOMBRE
b EST_DU_TYPE NOMBRE
c EST_DU_TYPE NOMBRE

DEBUT_ALGORITHME
	a PREND_LA_VALEUR 25
	b PREND_LA_VALEUR 5
	c PREND_LA_VALEUR b
	b PREND_LA_VALEUR a
	a PREND_LA_VALEUR c
	AFFICHER a
	AFFICHER b
FIN_ALGORITHME

4)
FONCTIONS_UTILISEES

VARIABLES
	x EST_DU_TYPE NOMBRE
	y EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	x PREND_LA_VALEUR 1
	y PREND_LA_VALEUR 1
	
		POUR y ALLANT_DE 1 A 25
		DEBUT_POUR
		POUR x ALLANT_DE 1 A y
		DEBUT_POUR
		AFFICHER x
		FIN_POUR
		 	AFFICHER* " "
		FIN_POUR
FIN_ALGORITHME

5)FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
y EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	POUR x ALLANT_DE 1 A 30
		DEBUT_POUR
		y PREND_LA_VALEUR x+y
		FIN_POUR
		AFFICHER y
FIN_ALGORITHME

5-bis)
FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
y EST_DU_TYPE NOMBRE
z EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
LIRE z
POUR x ALLANT_DE 1 A z
	DEBUT_POUR
	y PREND_LA_VALEUR x+y
	FIN_POUR
	AFFICHER* y
	
FIN_ALGORITHME

6)

FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	LIRE x
	SI (x % 2 == 0) ALORS
		DEBUT_SI
		 AFFICHER x
		 AFFICHER* "ok"
		FIN_SI
		 SINON
		  	DEBUT_SINON
		  	 AFFICHER "ratÃ©"
		  	FIN_SINON
FIN_ALGORITHME


7)
FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	 POUR x ALLANT_DE 1 A 20
	 	DEBUT_POUR
	 	SI (x % 2 == 0) ALORS
	 		DEBUT_SI
	 		AFFICHER x
	 		FIN_SI
	 	FIN_POUR
FIN_ALGORITHME

8)

FONCTIONS_UTILISEES

VARIABLES
a EST_DU_TYPE NOMBRE
b EST_DU_TYPE NOMBRE
c EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	LIRE b
	LIRE c

	a PREND_LA_VALEUR ((b*b)+(c*c))
	a PREND_LA_VALEUR sqrt(a)
	AFFICHER* a
FIN_ALGORITHME

9)
FONCTIONS_UTILISEES

VARIABLES
a EST_DU_TYPE NOMBRE
b EST_DU_TYPE CHAINE
c EST_DU_TYPE CHAINE
d EST_DU_TYPE CHAINE
DEBUT_ALGORITHME
b PREND_LA_VALEUR "matin"
c PREND_LA_VALEUR "aprÃ©s-midi"
d PREND_LA_VALEUR "soir"
LIRE a
			SI (a <= 12) ALORS
				DEBUT_SI
				  AFFICHER b
				FIN_SI
					SINON
							DEBUT_SINON
								SI (a>12 ET a<18) ALORS
									DEBUT_SI
										AFFICHER c
									FIN_SI	
										SINON
												DEBUT_SINON
													SI (a<18 ET a < 24) ALORS
														DEBUT_SI
															AFFICHER d
														FIN_SI	
															SINON
																	DEBUT_SINON
																		SI (a>24) ALORS
																			DEBUT_SI
																			AFFICHER "mÃªme joueur joue encore"
																			FIN_SI
																	FIN_SINON
												FIN_SINON
							FIN_SINON
				
						
						
						
				
FIN_ALGORITHME

10)

FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
a EST_DU_TYPE CHAINE
b EST_DU_TYPE CHAINE
c EST_DU_TYPE CHAINE
DEBUT_ALGORITHME
x PREND_LA_VALEUR 0
a PREND_LA_VALEUR "foo"
b PREND_LA_VALEUR "bar"
c PREND_LA_VALEUR "foobar"
POUR x ALLANT_DE 1 A 100
	DEBUT_POUR
	SI (x % 3 == 0 ET x % 5 == 0) ALORS
		DEBUT_SI
		AFFICHER* c
		FIN_SI
		SINON
			DEBUT_SINON
				SI (x % 5 == 0) ALORS
					DEBUT_SI
					AFFICHER* b
					FIN_SI
					SINON
							DEBUT_SINON
								SI (x % 3 == 0) ALORS
									DEBUT_SI
									AFFICHER* a
									FIN_SI
									SINON
									 	DEBUT_SINON
									 	AFFICHER* x
									 	FIN_SINON
							FIN_SINON
			FIN_SINON
	FIN_POUR
	
FIN_ALGORITHME

10)
FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
y EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	x PREND_LA_VALEUR 0
	y PREND_LA_VALEUR 0
	POUR y ALLANT_DE 0 A 9
		DEBUT_POUR
		POUR x ALLANT_DE 0 A 9
			DEBUT_POUR
			AFFICHERCALCUL  y*x
			FIN_POUR
			AFFICHER* " " 
		FIN_POUR
FIN_ALGORITHME

deuxiÃ¨me liste

1. pyramide

FONCTIONS_UTILISEES

VARIABLES
 x EST_DU_TYPE NOMBRE
 y EST_DU_TYPE NOMBRE
 z EST_DU_TYPE CHAINE
 user EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
LIRE user
x PREND_LA_VALEUR 1

y PREND_LA_VALEUR 1

z PREND_LA_VALEUR "ðŸ¤¢"
	POUR y ALLANT_DE 1 A user
	 	DEBUT_POUR
	 	POUR x ALLANT_DE 1 A y
	 		DEBUT_POUR
	 			AFFICHER z
	 		FIN_POUR
	 		AFFICHER* " "
	 	FIN_POUR  
FIN_ALGORITHME


2) damier en cours
FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
y EST_DU_TYPE NOMBRE
tete EST_DU_TYPE CHAINE
chat EST_DU_TYPE CHAINE
user EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
LIRE user	
x PREND_LA_VALEUR 0
y PREND_LA_VALEUR 0
tete PREND_LA_VALEUR "ðŸ¥¶"
chat PREND_LA_VALEUR "ðŸ˜¾"
POUR y ALLANT_DE 1 A user
	DEBUT_POUR
	POUR x ALLANT_DE 1 A user
		DEBUT_POUR
		SI (x % 2 == 0 ET y % 2 != 0) ALORS
			DEBUT_SI
			AFFICHER tete
			FIN_SI
		SI (x % 2 != 0 ET y % 2 == 0) ALORS
			DEBUT_SI
			AFFICHER chat
			FIN_SI	
		FIN_POUR
		AFFICHER* " "
	FIN_POUR
	
FIN_ALGORITHME

nombre mistere
FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
y EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	x PREND_LA_VALEUR ALGOBOX_ALEA_ENT(0,100)
	
	TANT_QUE (y!=x) FAIRE
		DEBUT_TANT_QUE
		LIRE y
			SI (y<x) ALORS
				DEBUT_SI
				AFFICHER "trop petit"
				FIN_SI
				SINON
					DEBUT_SINON
					SI (y>x) ALORS
					DEBUT_SI
					AFFICHER "trop grand"
					FIN_SI
					FIN_SINON
							
		FIN_TANT_QUE
		
		SI (y=x) ALORS
			DEBUT_SI
			AFFICHER x
			FIN_SI
FIN_ALGORITHME

shi fu mi)

FONCTIONS_UTILISEES

VARIABLES
x EST_DU_TYPE NOMBRE
y EST_DU_TYPE NOMBRE

gameover EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
							x PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,3)
		gameover PREND_LA_VALEUR 1
	
	AFFICHER "faite votre choix avec la ligne y: pierre = 1; feuille = 2 ou ciseaux = 3"
	TANT_QUE (gameover==1) FAIRE
			DEBUT_TANT_QUE

			
LIRE y
				
	SI (x==1 ET y==2 OU x==2 ET y==3 ou x==3 ET y==1) ALORS
				DEBUT_SI
				AFFICHER* "VICTOIRE"
				AFFICHER "votre choix: "
				AFFICHER y
				SI (y==1) ALORS
					DEBUT_SI
					AFFICHER "=pierre"
					FIN_SI
					SINON
						DEBUT_SINON
						SI (y==2) ALORS
							DEBUT_SI
							AFFICHER "=feuille"
							FIN_SI
							SINON
								DEBUT_SINON
								AFFICHER "=ciseaux"
								FIN_SINON
						FIN_SINON
				AFFICHER "  /  choix de l'IA: "
				AFFICHER x
				 SI (x==1) ALORS
					DEBUT_SI
					AFFICHER "=pierre"
					FIN_SI
					SINON
						DEBUT_SINON
						SI (x==2) ALORS
							DEBUT_SI
							AFFICHER "=feuille"
							FIN_SI
							SINON
								DEBUT_SINON
								AFFICHER "=ciseaux"
								FIN_SINON
						FIN_SINON
				gameover PREND_LA_VALEUR 0
				FIN_SI
				SINON
					DEBUT_SINON
					SI (x==1 ET y==3 OU x==2 ET y==1 OU x==3 ET y==2) ALORS
						DEBUT_SI
						AFFICHER* "DEFAITE"
						AFFICHER "votre choix: "
						AFFICHER y
						SI (y==1) ALORS
					DEBUT_SI
					AFFICHER "=pierre"
					FIN_SI
					SINON
						DEBUT_SINON
						SI (y==2) ALORS
							DEBUT_SI
							AFFICHER "=feuille"
							FIN_SI
							SINON
								DEBUT_SINON
								AFFICHER "=ciseaux"
								FIN_SINON
						FIN_SINON
						AFFICHER "  /  choix de l'IA: "
						AFFICHER x
						SI (x==1) ALORS
					DEBUT_SI
					AFFICHER " =pierre"
					FIN_SI
					SINON
						DEBUT_SINON
						SI (x==2) ALORS
							DEBUT_SI
							AFFICHER "=feuille"
							FIN_SI
							SINON
								DEBUT_SINON
								AFFICHER "=ciseaux"
								FIN_SINON
						FIN_SINON
						gameover PREND_LA_VALEUR 0		
						FIN_SI
						SINON
							DEBUT_SINON
							SI (x==y) ALORS
								DEBUT_SI
								AFFICHER "egalitÃ©"
								x PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,3)
								FIN_SI
								SINON
									DEBUT_SINON
									SI (y>3) ALORS
										DEBUT_SI
										AFFICHER "veuillez choisir 1, 2 ou 3"
										FIN_SI
									FIN_SINON
							FIN_SINON
					FIN_SINON
		
	FIN_TANT_QUE	
FIN_ALGORITHME


jeux des batonnets

FONCTIONS_UTILISEES

VARIABLES
joueur1 EST_DU_TYPE NOMBRE
joueur2 EST_DU_TYPE NOMBRE
plateau EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	POUR plateau ALLANT_DE 1 A 16
		DEBUT_POUR
		plateau PREND_LA_VALEUR 16
		AFFICHER* plateau
	
			
		
		
		TANT_QUE (plateau!=1) FAIRE
			DEBUT_TANT_QUE
			
			
			
		LIRE joueur1
			SI (joueur1 == 1 OU joueur1 == 2 OU joueur1 == 3) ALORS
				DEBUT_SI
				plateau PREND_LA_VALEUR (plateau - joueur1)
				FIN_SI
				SINON
					DEBUT_SINON
					SI (joueur1>3) ALORS
						DEBUT_SI
					
						AFFICHER* "veuillez choisir 1, 2 ou 3"
						LIRE joueur1
						FIN_SI
					FIN_SINON
			AFFICHER* plateau	
			LIRE joueur2
			
			SI (joueur2 == 1 OU joueur2 == 2 OU joueur2 == 3) ALORS
				DEBUT_SI
				plateau PREND_LA_VALEUR (plateau - joueur2)
				FIN_SI
				SINON
					DEBUT_SINON
					SI (joueur2>3) ALORS
						DEBUT_SI
						AFFICHER* "veuillez choisir 1, 2 ou 3"
						lire joueur2
						FIN_SI
					FIN_SINON
			AFFICHER* plateau	
			FIN_TANT_QUE
		FIN_POUR 
FIN_ALGORITHME
